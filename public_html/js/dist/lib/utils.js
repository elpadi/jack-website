define([],function(){function blank(){return function(){}}function isNumber(val){return typeof val==="number"}function isTruthy(val){return!!val}function isFalsy(val){return!val}function isSomething(val){return!isNothing(val)}function isNothing(val){return val===undefined||val===null||isNaN(val)}function repeatCall(fn,times){for(var i=0;i<times;i++){fn()}}function getParam(index){return function(){return arguments.length>=index+1?arguments[index]:undefined}}function getValue(val){return typeof val==="function"?val.apply(this,Array.prototype.slice.call(arguments,1)):val}function feature(obj,feat){_.each(feat,function(fn,name){if(name in obj){obj[name]=fn}});"init"in feat&&feat.init.call(obj);if("properties"in feat){_.each(feat.properties,function(val,key){obj[key]=val})}}return{blank:blank,getParam:getParam,number:isNumber,truthy:isTruthy,falsy:isFalsy,isNothing:isNothing,isSomething:isSomething,val:getValue,repeatCall:repeatCall,feature:feature}});