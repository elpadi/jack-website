if(typeof define!=="function"){var define=require("amdefine")(module,require)}define(["require","../components/underscore/underscore","./math","./operators","./functions"],function(require){var _=require("../components/underscore/underscore");var math=require("./math");var op=require("./operators");var fn=require("./functions");var lazyIterate=function(obj,getValue,stop,fallback,context){var result=fallback;_.any(obj,function(value,index,list){if(stop.call(context,value,index,list)){result=getValue.call(context,value,index,list);return true}});return result};var multiply=function(){};var multiMap=function(fn){var result=[];switch(arguments.length){case 0:case 1:return[];case 2:return _.map(arguments[1],fn)}return _.map(_.multiply.apply(this,_.rest(arguments)),_.bind(Function.prototype.apply,fn,this))};var remove=function(arr,index,count){var copy=_.clone(arr);if(count===undefined){count=arr.length-index}if(count>0){copy.splice(index,count)}return copy};var get=function(obj,iterator,context){return lazyIterate(obj,function(val){return val},iterator,undefined,context)};var findIndex=function(obj,iterator_or_value,context){var result=-1;if(typeof iterator_or_value!=="function"){return _.indexOf(obj,iterator_or_value)}return lazyIterate(obj,function(val,i){return i},iterator_or_value,-1,context)};var pad=function(arr,length,value){var result=_.clone(arr);for(var i=arr.length;i<length;i++){result.push(value)}return result};var mapObj=function(obj,iterator,context){var result={};_.any(obj,function(value,key,obj){result[key]=iterator.call(context,value,key,obj)});return result};var multiplyTwo=function(obj1,obj2){var result=[];if(obj1.length===0){return obj2}if(obj2.length===0){return obj1}_.each(obj1,function(val1){_.each(obj2,function(val2){result.push(_.flatten([val1,val2]))})});return result};return{remove:remove,findIndex:findIndex,get:get,pad:pad,mapObj:mapObj,multiply:fn.reduce(multiplyTwo,[])}});